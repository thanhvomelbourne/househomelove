@using CoreLibrary.Data
@model BusinessService.Models.Common.AdminModel
@{
    ViewBag.Title = "Categories";
    Layout = "~/Views/Shared/_Admin.cshtml";
}

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <h2 class="page-header color_blue"><i class="fa fa-barcode fa-fw"></i> Categories</h2>
    </div>
</div>
<div class="row">
    @using (Html.BeginForm("Category", "Admin", FormMethod.Get))
    {
        <div class="col-lg-3 col-md-3 col-sm-8 col-xs-8">

            <div class="input-group">
                @Html.TextBox("Search", ViewBag.CurrentSearch as string, new { @class = "form-control" })
                <span class="input-group-addon">
                    <i type="submit" class="fa fa-search"></i>
                </span>
            </div>
        </div>
        <div class="col-lg-1 col-md-1 col-sm-4 col-xs-4 text-center">
            <div class="form-group">
                <select class="form-control" id="searchByLive" name="SearchByLive" onchange="this.form.submit()">
                    @if (ViewBag.SearchByLive == Constant.CommonValue.NotLive)
                    {
                        <option value="@Constant.CommonValue.All">All</option>
                        <option value="@Constant.CommonValue.IsLive">Is Live</option>
                        <option value="@Constant.CommonValue.NotLive" selected>Not Live</option>
                    }
                    else if (ViewBag.SearchByLive == Constant.CommonValue.IsLive)
                    {
                        <option value="@Constant.CommonValue.All">All</option>
                        <option value="@Constant.CommonValue.IsLive" selected>Is Live</option>
                        <option value="@Constant.CommonValue.NotLive">Not Live</option>
                    }
                    else
                    {
                        <option value="@Constant.CommonValue.All" selected>All</option>
                        <option value="@Constant.CommonValue.IsLive">Is Live</option>
                        <option value="@Constant.CommonValue.NotLive">Not Live</option>
                    }
                </select>
            </div>
        </div>
    }
    <div class="col-lg-4 col-md-4 hidden-sm hidden-xs">&nbsp;</div>
    <div class="col-lg-4 col-md-4 hidden-sm hidden-xs">
        <button id="btn_createCategory" type="button" class="btn btn-outline btn-primary float-right" data-toggle="modal" data-target="#form_createCategory" onclick="resetForm()"><i class="fa fa-plus-square"></i> &nbsp; Create new Category</button>
    </div>
    <div class="hidden-lg hidden-md col-sm-12 col-xs-12">
        <button id="btn_createCategory" type="button" class="btn btn-outline btn-primary float-right width_100" data-toggle="modal" data-target="#form_createCategory" onclick="resetForm()"><i class="fa fa-plus-square"></i> &nbsp; Create new Category</button>
    </div>
</div>
<br />
<div class="row">
    <div class="col-lg-12 col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <span class="float_right">Total: @Model.CategoryList.TotalItems items &nbsp;|&nbsp; Page @(Model.CategoryList.TotalPages < Model.CategoryList.CurrenPage ? 0 : Model.CategoryList.CurrenPage) of @Model.CategoryList.TotalPages</span>
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                <div class="dataTable_wrapper">
                    <table class="table table-striped table-bordered table-hover hidden-sm hidden-xs" id="dataTables-example">
                        <thead>
                            <tr>
                                <th class="text-center text-primary">Id</th>
                                <th class="text-center text-primary">Name</th>
                                <th class="text-center text-primary">Category Code</th>
                                <th class="text-center text-primary">Description</th>
                                <th class="text-center text-primary">Is Live</th>
                                <th class="text-center text-primary">Created By</th>
                                <th class="text-center text-primary">Created At</th>
                                <th class="text-center text-primary">Updated By</th>
                                <th class="text-center text-primary">Updated At</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="bodyTable">
                            @foreach (var m in Model.CategoryList.Data)
                            {
                                <tr id="row_@m.Id">
                                    <td class="text-center">@m.Id</td>
                                    <td class="text-center">@m.Name</td>
                                    <td class="text-center">@m.PrefixForProductCode</td>
                                    <td class="text-center">@m.Description</td>
                                    @if (m.IsLive)
                                    {
                                        <td class="text-center"><i class='fa fa-check text-primary'></i></td>
                                    }
                                    else
                                    {
                                        <td class="text-center"><i class='fa fa-times text-danger'></i></td>
                                    }
                                    <td class="text-center">@m.CreatedBy</td>
                                    <td class="text-center">@m.CreatedAt</td>
                                    <td class="text-center">@m.UpdatedBy</td>
                                    <td class="text-center">@m.UpdatedAt</td>
                                    <td class="text-center">
                                        <a onclick="openUpdateCategory(@m.Id)"><i class="fa fa-pencil-square-o cusor_pointer"></i></a>
                                        &nbsp;
                                        <a onclick="confirmDeleteCategory(@m.Id, '@m.Name')"><i class="fa fa-trash-o cusor_pointer"></i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="hidden-lg hidden-md">
                        @foreach (var m in Model.CategoryList.Data)
                        {
                            <div class="panel panel-default" id="row_@m.Id">
                                <div class="panel-heading">@m.Id - @m.Name</div>
                                <table class="table table-striped table-bordered table-hover">
                                    <tbody>
                                        <tr>
                                            <td class="font-bold width_50">Prefix For PC</td>
                                            <td class="text-center">@m.PrefixForProductCode</td>
                                        </tr>
                                        <tr>
                                            <td class="font-bold width_50">Description</td>
                                            <td class="text-center">@m.Description</td>
                                        </tr>
                                        <tr>
                                            <td class="font-bold width_50">Is Live</td>
                                            @if (m.IsLive)
                                            {
                                                <td class="text-center"><i class='fa fa-check text-primary'></i></td>
                                            }
                                            else
                                            {
                                                <td class="text-center"><i class='fa fa-times text-danger'></i></td>
                                            }
                                        </tr>
                                    </tbody>
                                </table>
                                <div class="panel-footer">
                                    <div class="row">
                                        <div class="col-xs-12">
                                            <span class="text-muted pull-right small">Created at @m.CreatedAt by @m.CreatedBy</span>
                                        </div>
                                        @if (!string.IsNullOrEmpty(m.UpdatedAt))
                                        {
                                            <div class="col-xs-12">
                                                <span class="text-muted pull-right small">Updated at @m.UpdatedAt by @m.UpdatedBy</span>
                                            </div>
                                        }
                                    </div>
                                    <br />
                                    <div class="row">
                                        <div class="col-xs-4"><a onclick="openUpdateCategory(@m.Id)" class="pull-left"><i class="fa fa-pencil-square-o cusor_pointer"></i>&nbsp;Update</a></div>
                                        <div class="col-xs-4"></div>
                                        <div class="col-xs-4">
                                            <a onclick="confirmDeleteCategory(@m.Id, '@m.Name')" class="pull-right"><i class="fa fa-trash-o cusor_pointer"></i>&nbsp;Remove</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <nav aria-label="paging" class="text-center">
                        <div class="dataTables_paginate paging_simple_numbers" id="dataTables-example_paginate">
                            <ul class="pagination">
                                @{
                                    if (Model.CategoryList.IsFirstPage)
                                    {
                                        <li class="paginate_button previous disabled" aria-controls="dataTables-example" tabindex="0" id="dataTables-example_previous">
                                            <a>Previous</a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="paginate_button previous" aria-controls="dataTables-example" tabindex="0" id="dataTables-example_previous">
                                            @Html.ActionLink("Previous", "Category", new { PageNo = Model.CategoryList.CurrenPage - 1, CurrentSearch = ViewBag.CurrentSearch })
                                        </li>
                                    }

                                    for (int i = 1; i <= Model.CategoryList.TotalPages; i++)
                                    {
                                        if (Model.CategoryList.CurrenPage == i)
                                        {
                                            <li class="paginate_button active" aria-controls="dataTables-example" tabindex="0">
                                                @Html.ActionLink(i.ToString(), "Category", new { PageNo = i, CurrentSearch = ViewBag.CurrentSearch })
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="paginate_button" aria-controls="dataTables-example" tabindex="0">
                                                @Html.ActionLink(i.ToString(), "Category", new { PageNo = i, CurrentSearch = ViewBag.CurrentSearch })
                                            </li>
                                        }
                                    }

                                    if (Model.CategoryList.IsLastPage || !Model.CategoryList.Data.Any())
                                    {
                                        <li class="paginate_button next disabled" aria-controls="dataTables-example" tabindex="0" id="dataTables-example_next">
                                            <a>Next</a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="paginate_button next" aria-controls="dataTables-example" tabindex="0" id="dataTables-example_next">
                                            @Html.ActionLink("Next", "Category", new { PageNo = Model.CategoryList.CurrenPage + 1, CurrentSearch = ViewBag.CurrentSearch })
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm("CreateUpdate", "Category", FormMethod.Post, new { @id = "form_createCategory", @class = "modal fade", @role = "dialog" }))
{
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Create new Category</h4>
            </div>
            <div class="modal-body">
                @Html.Hidden("Id")
                <div class="form-group">
                    <label>Name</label>
                    <input id="nameCategory" name="Name" type="text" class="form-control" placeholder="Name" required />
                </div>
                <div class="form-group">
                    <label>Category Code</label>
                    <input id="categoryCode" name="PrefixForProductCode" type="text" class="form-control" placeholder="Category Code" />
                </div>
                <div class="form-group">
                    <label>Description</label>
                    <input id="descriptionCategory" name="Description" type="text" class="form-control" placeholder="Description" />
                </div>
                <div class="form-group">
                    <label>Set it live</label>
                    <label class="checkbox-inline">
                        &nbsp;<input id="isLive" name="IsLive" type="checkbox" checked>
                    </label>
                </div>
            </div>
            <div class="modal-footer">
                <button id="submit_Category" type="submit" class="btn btn-primary"><i class="fa fa-check"></i>&nbsp;Save</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("Delete", "Category", FormMethod.Post, new { @id = "form_deleteCategory", @class = "modal fade", @role = "dialog" }))
{
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Delete Category</h4>
            </div>
            <div class="modal-body">
                @Html.Hidden("categoryIdForDelete")
                <div id="message_confirm" style="padding-top: 5px;">Are you sure you want to delete "<b id="delete_nameCategory"></b>"?</div>
            </div>
            <div class="modal-footer">
                <button id="delete_Category" type="submit" class="btn btn-primary"><i class="fa fa-trash"></i>&nbsp;Delete</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    function confirmDeleteCategory(id, name) {
        $("#delete_nameCategory").text(name);
        $("#categoryIdForDelete").val(id);
        $('#form_deleteCategory').modal('toggle');
    };

    function openUpdateCategory(id) {
        $.ajax({
            cache: false,
            type: "GET",
            url: '@Url.Action("Details", "Category")',
            async: false,
            data: { categoryId: id },
            dataType: "json",
            timeout: 5000,
            success: function (response) {
                if (response.success === true) {
                    $('#Id').val(response.data.Id);
                    $("#nameCategory").val(response.data.Name);
                    $("#categoryCode").val(response.data.PrefixForProductCode);
                    $("#descriptionCategory").val(response.data.Description);
                    $("#isLive").prop("checked", response.data.IsLive);
                    $('#form_createCategory').modal('toggle');
                }
            },
        });
    };

    function resetForm() {
        $('#Id').val(null);
        $("#nameCategory").val(null);
        $("#categoryCode").val(null);
        $("#descriptionCategory").val(null);
    };
</script>